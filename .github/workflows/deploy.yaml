name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write   # ✅ needed for pushing version tags
  pages: write
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

  version:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate CalVer and update package.json
        run: |
          DATE=$(date +'%Y.%m.%d')   # Example: 2025.10.05
          jq --arg v "$DATE" '.version=$v' package.json > tmp.json && mv tmp.json package.json
          git add package.json
          git commit -m "chore(release): $DATE [skip ci]" || echo "No changes to commit"
          git tag "v$DATE"
          git push --follow-tags origin main

  build:
    runs-on: ubuntu-latest
    needs: version   # ✅ only runs if versioning succeeds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build with Parcel
        run: npm run build

      - name: Upload build output
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
