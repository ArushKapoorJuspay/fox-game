name: Lint, Version, Build & Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write   # needed for version tagging

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  version:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate daily CalVer version
        id: calver
        run: |
          DATE=$(date +'%Y.%m.%d')
          # Get the last tag for today
          LAST_TAG=$(git tag --list "v$DATE.*" --sort=-v:refname | head -n1)
          if [ -z "$LAST_TAG" ]; then
            SUFFIX=0
          else
            SUFFIX=$(echo $LAST_TAG | awk -F. '{print $4}')
            SUFFIX=$((SUFFIX + 1))
          fi
          NEW_VERSION="$DATE.$(printf "%02d" $SUFFIX)"
          echo "New version: $NEW_VERSION"
          # Update package.json
          jq --arg v "$NEW_VERSION" '.version=$v' package.json > tmp.json && mv tmp.json package.json
          git add package.json
          git commit -m "chore(release): $NEW_VERSION [skip ci]" || echo "No changes to commit"
          git tag "v$NEW_VERSION"
          git push --follow-tags origin main
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build with Parcel
        run: npm run build

      - name: List dist files (debug)
        run: ls -R dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          commit_message: "Deploy site from GitHub Actions"
