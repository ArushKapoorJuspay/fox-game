{"version":3,"sources":["ui.js","constants.js","gameState.js","buttons.js","init.js"],"names":["modFox","exports","state","document","querySelector","className","concat","modScene","togglePoopBag","show","classList","toggle","writeModal","text","arguments","length","undefined","innerHTML","TICK_RATE","ICONS","RAIN_CHANCE","SCENES","DAY_LENGTH","NIGHT_LENGTH","getNextHungerTime","clock","Math","floor","random","getNextDieTime","getNextPoopTime","_ui","require","_constants","gameState","current","wakeTime","sleepTime","hungryTime","dieTime","poopTime","timeToStartCelebrating","timeToEndCelebrating","tick","wake","sleep","getHungry","die","startCelebrating","endCelebrating","poop","startGame","scene","determineFoxState","clearTimes","handleUserAction","icon","includes","changeWeather","cleanUpPoop","feed","bind","_default","default","toggleHighlighted","initButtons","selectedIcon","addEventListener","event","target","contains","_gameState","_interopRequireWildcard","_buttons","_interopRequireDefault","e","__esModule","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_regenerator","Symbol","iterator","toStringTag","c","prototype","Generator","u","create","_regeneratorDefine2","p","y","G","v","a","d","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","displayName","w","m","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","apply","_next","_throw","init","_init","_callee","nextTimeToTick","nextAnimationFrame","_context","_nextAnimationFrame","now","Date","requestAnimationFrame"],"mappings":"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","file":"init.e839e73c.js","sourceRoot":"../src","sourcesContent":["export const modFox = function modFox(state) {\n  document.querySelector(\".fox\").className = `fox fox-${state}`;\n};\n\nexport const modScene = function modScene(state) {\n  document.querySelector(\".game\").className = `game ${state}`;\n};\n\nexport const togglePoopBag = function togglePoopBag(show) {\n  document.querySelector(\".poop-bag\").classList.toggle(\"hidden\", !show);\n};\n\nexport const writeModal = function writeModal(text = \"\") {\n  document.querySelector(\".modal\").innerHTML =\n    `<div class=\"modal-inner\">${text}</div>`;\n};\n","export const TICK_RATE = 3000;\nexport const ICONS = [\"fish\", \"poop\", \"weather\"];\nexport const RAIN_CHANCE = 0.2;\nexport const SCENES = [\"day\", \"rain\"];\nexport const DAY_LENGTH = 60;\nexport const NIGHT_LENGTH = 4;\n\nexport const getNextHungerTime = (clock) =>\n  Math.floor(Math.random() * 3) + 5 + clock;\nexport const getNextDieTime = (clock) =>\n  Math.floor(Math.random() * 2) + 3 + clock;\nexport const getNextPoopTime = (clock) =>\n  Math.floor(Math.random() * 3) + 4 + clock;\n","import { modFox, modScene, togglePoopBag, writeModal } from \"./ui\";\nimport {\n  RAIN_CHANCE,\n  SCENES,\n  DAY_LENGTH,\n  NIGHT_LENGTH,\n  getNextHungerTime,\n  getNextDieTime,\n  getNextPoopTime,\n} from \"./constants\";\n\nconst gameState = {\n  current: \"INIT\",\n  clock: 1,\n  wakeTime: -1,\n  sleepTime: -1,\n  hungryTime: -1,\n  dieTime: -1,\n  poopTime: -1,\n  timeToStartCelebrating: -1,\n  timeToEndCelebrating: -1,\n  tick() {\n    this.clock++;\n\n    if (this.clock === this.wakeTime) {\n      this.wake();\n    } else if (this.clock === this.sleepTime) {\n      this.sleep();\n    } else if (this.clock === this.hungryTime) {\n      this.getHungry();\n    } else if (this.clock === this.dieTime) {\n      this.die();\n    } else if (this.clock === this.timeToStartCelebrating) {\n      this.startCelebrating();\n    } else if (this.clock === this.timeToEndCelebrating) {\n      this.endCelebrating();\n    } else if (this.clock === this.poopTime) {\n      this.poop();\n    }\n\n    return this.clock;\n  },\n  startGame() {\n    this.current = \"HATCHING\";\n    this.wakeTime = this.clock + 2;\n    modFox(\"egg\");\n    modScene(\"day\");\n    writeModal();\n  },\n  wake() {\n    this.current = \"IDLING\";\n    this.wakeTime = -1;\n    this.scene = Math.random() > RAIN_CHANCE ? 0 : 1;\n    modScene(SCENES[this.scene]);\n    this.sleepTime = this.clock + DAY_LENGTH;\n    this.hungryTime = getNextHungerTime(this.clock);\n    this.determineFoxState();\n  },\n  sleep() {\n    this.state = \"SLEEP\";\n    modFox(\"sleep\");\n    modScene(\"night\");\n    this.clearTimes();\n    this.wakeTime = this.clock + NIGHT_LENGTH;\n  },\n  clearTimes() {\n    this.wakeTime = -1;\n    this.sleepTime = -1;\n    this.hungryTime = -1;\n    this.dieTime = -1;\n    this.poopTime = -1;\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = -1;\n  },\n  getHungry() {\n    this.current = \"HUNGRY\";\n    this.dieTime = getNextDieTime(this.clock);\n    this.hungryTime = -1;\n    modFox(\"hungry\");\n  },\n  poop() {\n    this.current = \"POOPING\";\n    this.poopTime = -1;\n    this.dieTime = getNextDieTime(this.clock);\n    modFox(\"pooping\");\n  },\n  die() {\n    this.current = \"DEAD\";\n    modScene(\"dead\");\n    modFox(\"dead\");\n    this.clearTimes();\n    writeModal(\"The fox died :( <br /> Press the middle button to start\");\n  },\n  startCelebrating() {\n    this.current = \"CELEBRATING\";\n    modFox(\"celebrate\");\n    this.timeToStartCelebrating = -1;\n    this.timeToEndCelebrating = this.clock + 2;\n  },\n  endCelebrating() {\n    this.timeToEndCelebrating = -1;\n    this.current = \"IDLING\";\n    this.determineFoxState();\n    togglePoopBag(false);\n  },\n  determineFoxState() {\n    if (this.current === \"IDLING\") {\n      if (SCENES[this.scene] === \"rain\") {\n        modFox(\"rain\");\n      } else {\n        modFox(\"idling\");\n      }\n    }\n  },\n  handleUserAction(icon) {\n    if (\n      [\"SLEEP\", \"FEEDING\", \"CELEBRATING\", \"HATCHING\"].includes(this.current)\n    ) {\n      // do nothing\n      return;\n    }\n\n    if (this.current === \"INIT\" || this.current === \"DEAD\") {\n      this.startGame();\n      return;\n    }\n\n    switch (icon) {\n      case \"weather\":\n        this.changeWeather();\n        break;\n      case \"poop\":\n        this.cleanUpPoop();\n        break;\n      case \"fish\":\n        this.feed();\n        break;\n    }\n  },\n  changeWeather() {\n    this.scene = (this.scene + 1) % SCENES.length;\n    modScene(SCENES[this.scene]);\n    this.determineFoxState();\n  },\n  cleanUpPoop() {\n    if (this.current !== \"POOPING\") {\n      return;\n    }\n\n    this.dieTime = -1;\n    togglePoopBag(true);\n    this.startCelebrating();\n    this.hungryTime = getNextHungerTime(this.clock);\n  },\n  feed() {\n    if (this.current !== \"HUNGRY\") {\n      return;\n    }\n\n    this.current = \"FEEDING\";\n    this.dieTime = -1;\n    this.poopTime = getNextPoopTime(this.clock);\n    modFox(\"eating\");\n    this.timeToStartCelebrating = this.clock + 2;\n  },\n};\n\nexport const handleUserAction = gameState.handleUserAction.bind(gameState);\nexport default gameState;\n","import { ICONS } from \"./constants.js\";\n\nconst toggleHighlighted = (icon, show) =>\n  document\n    .querySelector(`.${ICONS[icon]}-icon`)\n    .classList.toggle(\"highlighted\", show);\n\nexport default function initButtons(handleUserAction) {\n  let selectedIcon = 0;\n\n  function buttonClick(event) {\n    if (event.target.classList.contains(\"left-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (2 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else if (event.target.classList.contains(\"right-btn\")) {\n      toggleHighlighted(selectedIcon, false);\n      selectedIcon = (1 + selectedIcon) % ICONS.length;\n      toggleHighlighted(selectedIcon, true);\n    } else {\n      handleUserAction(ICONS[selectedIcon]);\n    }\n  }\n\n  document.querySelector(\".buttons\").addEventListener(\"click\", buttonClick);\n}\n","import gameState, { handleUserAction } from \"./gameState\";\nimport { TICK_RATE } from \"./constants\";\nimport initButtons from \"./buttons\";\n\nasync function init() {\n  initButtons(handleUserAction);\n\n  let nextTimeToTick = Date.now();\n\n  function nextAnimationFrame() {\n    const now = Date.now();\n\n    if (nextTimeToTick <= now) {\n      gameState.tick();\n      nextTimeToTick = now + TICK_RATE;\n    }\n\n    requestAnimationFrame(nextAnimationFrame);\n  }\n\n  requestAnimationFrame(nextAnimationFrame);\n}\n\ninit();\n"]}